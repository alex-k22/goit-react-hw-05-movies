{"version":3,"file":"static/js/881.1f83d805.chunk.js","mappings":"4NAEaA,EAAW,mCAAG,WAAOC,EAAMC,GAAb,6EACT,mCACC,gCACXC,EAAqB,CACzBC,QAHc,mCAIdC,SAAU,QACVC,KAAM,KANiB,SAaZC,EAAAA,EAAAA,IAAA,UAXI,iCAWJ,OAAwBN,GAAQ,CAC3CO,QAAO,kBACFL,GADC,IAEJD,MAAOA,MAhBc,mFAAH,uD,qLCDxB,G,QAAmE,4BAAnE,EAAiH,iCAAjH,EAA4K,wCAA5K,EAAuO,iCAAvO,EAA+Q,qBAA/Q,EAA2S,qBAA3S,EAAuU,qBAAvU,EAAmW,qB,SCmGnW,EA3Fe,WAAO,IAAD,EACnB,GAAwCO,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAMXhB,EAAK,UAAGQ,EAAaS,IAAI,gBAApB,QAAgC,IAC3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVlB,EAAJ,CAEAc,EAAcd,GACd,IACMmB,EAAW,UAAMnB,GAEjBoB,EAAS,mCAAG,gHAEStB,EAAAA,EAAAA,GALd,eAKgCqB,GAF3B,gBAENE,EAFM,EAENA,KACRT,EAAUS,EAAKC,SAEa,IAAxBD,EAAKC,QAAQC,QACfC,EAAAA,GAAAA,MAAY,4BANA,gDASdC,QAAQC,IAAR,MATc,yDAAH,qDAYfN,GAlBwB,CAmBzB,GAAE,CAACpB,IAOJ,OACE,iCACE,kBAAM2B,UAAWC,EAAgBC,SAPhB,SAAAC,GACnBA,EAAEC,iBACFtB,EAAgB,CAAET,MAAO8B,EAAEE,OAAOC,SAASC,MAAMC,MAAMC,QACxD,EAIG,WACE,kBACET,UAAWC,EACXS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,UAAQ,EACRC,YAAY,gBACZC,SA3CkB,SAAAb,GACxBhB,EAAcgB,EAAEE,OAAOG,MACxB,EA0COA,MAAOtB,KAET,oBAAQwB,KAAK,SAASV,UAAWC,EAAjC,WACE,SAAC,MAAD,KACA,iBAAMD,UAAWC,EAAjB,SAAiD,kBAGrD,eAAID,UAAWC,EAAf,SACGjB,EAAOiC,KAAI,SAAAC,GACV,OACE,iCACE,eAAmBlB,UAAWC,EAA9B,UACE,UAAC,KAAD,CACEkB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMlC,GACfY,UAAWC,EAHb,WAKE,SAAC,MAAD,CAAcD,UAAWC,IACxBiB,EAAMK,OAASL,EAAML,SAPjBK,EAAME,KAUf,SAAC,KAAD,CACEI,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,WAIb,QAIR,C","sources":["API/movies-api.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async (path, query) => {\n  const API_KEY = 'b3232dec66f7bb298b28583e91fb7fbe';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const BASE_SEARCH_PARAMS = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    // orientation: 'horizontal',\n    // safesearch: true,\n  };\n  // const per_page = 12;\n\n  \n  return await axios.get(`${BASE_URL}${path}`, {\n    params: {\n      ...BASE_SEARCH_PARAMS,\n      query: query,\n      // page: page,\n      // per_page: per_page,\n    },\n  });\n};\n\n// import axios from 'axios';\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n\n//   import axios from 'axios';\n\n//   const options = {\n//     method: 'GET',\n//     url: 'https://api.themoviedb.org/3/search/movie',\n//     params: {query: 'batman', include_adult: 'false', language: 'en-US', page: '1'},\n//     headers: {\n//       accept: 'application/json',\n//       Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//     }\n//   };\n  \n//   axios\n//     .request(options)\n//     .then(function (response) {\n//       console.log(response.data);\n//     })\n//     .catch(function (error) {\n//       console.error(error);\n//     });","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__485Hv\",\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"SearchFormButton\":\"Movies_SearchFormButton__yo7B9\",\"SearchForm-button-label\":\"Movies_SearchForm-button-label__mUtId\",\"SearchForm-input\":\"Movies_SearchForm-input__27oAB\",\"link\":\"Movies_link__MzAfU\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"icon\":\"Movies_icon__5yLpa\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'API/movies-api';\nimport { BsSearch } from 'react-icons/bs';\nimport { RiMovie2Fill } from 'react-icons/ri';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [movies, setMovies] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const location = useLocation();\n\n  const handleQueryChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (query === '') return;\n\n    setInputValue(query);\n    const path = 'search/movie';\n    const queryParams = `${query}`;\n\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchMovies(path, queryParams);\n        setMovies(data.results);\n\n        if (data.results.length === 0) {\n          toast.error('Sorry, but nothing found');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.input.value.trim() });\n  };\n\n  return (\n    <>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <input\n          className={css['SearchForm-input']}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"input\"\n          required\n          placeholder=\"Search movies\"\n          onChange={handleQueryChange}\n          value={inputValue}\n        />\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <BsSearch />\n          <span className={css['SearchForm-button-label']}>Search</span>\n        </button>\n      </form>\n      <ul className={css.list}>\n        {movies.map(movie => {\n          return (\n            <>\n              <li key={movie.id} className={css.item}>\n                <Link\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                  className={css.link}\n                >\n                  <RiMovie2Fill className={css.icon} />\n                  {movie.title || movie.name}\n                </Link>\n              </li>\n              <ToastContainer\n                position=\"top-right\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n                theme=\"dark\"\n              />\n            </>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovies","path","query","BASE_SEARCH_PARAMS","api_key","language","page","axios","params","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","inputValue","setInputValue","location","useLocation","get","useEffect","queryParams","fetchData","data","results","length","toast","console","log","className","css","onSubmit","e","preventDefault","target","elements","input","value","trim","type","autoComplete","autoFocus","name","required","placeholder","onChange","map","movie","to","id","state","from","title","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}