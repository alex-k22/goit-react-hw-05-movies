{"version":3,"file":"static/js/168.3d05311a.chunk.js","mappings":"4NAEaA,EAAW,mCAAG,WAAOC,EAAMC,GAAb,6EACT,mCACC,gCACXC,EAAqB,CACzBC,QAHc,mCAIdC,SAAU,QACVC,KAAM,KANiB,SAaZC,EAAAA,EAAAA,IAAA,UAXI,iCAWJ,OAAwBN,GAAQ,CAC3CO,QAAO,kBACFL,GADC,IAEJD,MAAOA,MAhBc,mFAAH,uD,6ICDxB,GAAiB,E,SCqCjB,EAjCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMb,EAAI,gBAAYQ,EAAZ,YACJM,EAAS,mCAAG,gHAESf,EAAAA,EAAAA,GAAYC,GAFrB,gBAENe,EAFM,EAENA,KACRH,EAAUG,EAAKC,SAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACN,KAEF,+BACqB,IAAlBG,EAAOQ,SAAgB,uBAAG,8CAC3B,wBACGR,EAAOS,KAAI,SAAAT,GACV,OACE,gBAAoBU,UAAWC,EAAAA,KAA/B,WACE,wBAAKX,EAAOY,UACZ,uBAAIZ,EAAOa,YAFJb,EAAOc,GAKnB,QAIR,C","sources":["API/movies-api.js","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async (path, query) => {\n  const API_KEY = 'b3232dec66f7bb298b28583e91fb7fbe';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const BASE_SEARCH_PARAMS = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    // orientation: 'horizontal',\n    // safesearch: true,\n  };\n  // const per_page = 12;\n\n  \n  return await axios.get(`${BASE_URL}${path}`, {\n    params: {\n      ...BASE_SEARCH_PARAMS,\n      query: query,\n      // page: page,\n      // per_page: per_page,\n    },\n  });\n};\n\n// import axios from 'axios';\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n\n//   import axios from 'axios';\n\n//   const options = {\n//     method: 'GET',\n//     url: 'https://api.themoviedb.org/3/search/movie',\n//     params: {query: 'batman', include_adult: 'false', language: 'en-US', page: '1'},\n//     headers: {\n//       accept: 'application/json',\n//       Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//     }\n//   };\n  \n//   axios\n//     .request(options)\n//     .then(function (response) {\n//       console.log(response.data);\n//     })\n//     .catch(function (error) {\n//       console.error(error);\n//     });","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'API/movies-api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    const path = `movie/${movieId}/reviews`;\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchMovies(path);\n        setReview(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  return (\n    <section>\n      {review.length === 0 && <p>We don`t have any reviews for this movie</p>}\n      <ul>\n        {review.map(review => {\n          return (\n            <li key={review.id} className={css.item}>\n              <h2>{review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchMovies","path","query","BASE_SEARCH_PARAMS","api_key","language","page","axios","params","movieId","useParams","useState","review","setReview","useEffect","fetchData","data","results","console","log","length","map","className","css","author","content","id"],"sourceRoot":""}