{"version":3,"file":"static/js/888.a9f3d901.chunk.js","mappings":"4NAEaA,EAAW,mCAAG,WAAOC,EAAMC,GAAb,6EACT,mCACC,gCACXC,EAAqB,CACzBC,QAHc,mCAIdC,SAAU,QACVC,KAAM,KANiB,SAaZC,EAAAA,EAAAA,IAAA,UAXI,iCAWJ,OAAwBN,GAAQ,CAC3CO,QAAO,kBACFL,GADC,IAEJD,MAAOA,MAhBc,mFAAH,uD,iKCDxB,EAA0B,8BAA1B,EAA8D,0BAA9D,EAA+F,2BAA/F,EAAiI,2BAAjI,EAAmK,2BAAnK,EAAwM,8BAAxM,EAAgP,8BAAhP,EAA0R,gCAA1R,EAAiU,2B,SC2EjU,EAtEqB,WAAO,IAAD,IACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAe3D,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMnB,EAAI,gBAAYQ,GAChBY,EAAS,mCAAG,gHAESrB,EAAAA,EAAAA,GAAYC,GAFrB,gBAENqB,EAFM,EAENA,KACRT,EAASS,GAHK,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACZ,KAGF,iBAAKgB,UAAWC,EAAhB,WACE,UAAC,KAAD,CACEC,GAAIX,EAAoBY,QACxBH,UAAS,UAAKC,EAAL,YAAiBA,GAF5B,WAIE,SAAC,MAAD,IAAe,cAGjB,qBAASD,UAAWC,EAApB,WACE,gBACEG,IAAKjB,EAAMkB,YA5BP,kCA4B2BlB,EAAMkB,YAAc,GACnDC,IAAKnB,EAAMoB,MACXC,MAAM,MACNC,OAAO,SAET,iBAAKT,UAAWC,EAAhB,WACE,wBAAKd,EAAMoB,SACX,yBAAG,gBAAmC,GAArBpB,EAAMuB,cAAmBC,UAAU,QACpD,eAAIX,UAAWC,EAAf,SAA8B,cAC9B,uBAAId,EAAMyB,YACV,eAAIZ,UAAWC,EAAf,SAA8B,YAC9B,uBACGd,EAAM0B,OACH1B,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAC3C,yBAKV,iBAAKjB,UAAWC,EAAhB,WACE,uBAAG,4BACH,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAG,OAAOF,UAAWC,EAA3B,SAAqC,YAIvC,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAUF,UAAWC,EAA9B,SAAwC,kBAK5C,SAAC,KAAD,SAIP,C","sources":["API/movies-api.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async (path, query) => {\n  const API_KEY = 'b3232dec66f7bb298b28583e91fb7fbe';\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const BASE_SEARCH_PARAMS = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    // orientation: 'horizontal',\n    // safesearch: true,\n  };\n  // const per_page = 12;\n\n  \n  return await axios.get(`${BASE_URL}${path}`, {\n    params: {\n      ...BASE_SEARCH_PARAMS,\n      query: query,\n      // page: page,\n      // per_page: per_page,\n    },\n  });\n};\n\n// import axios from 'axios';\n\n// const options = {\n//   method: 'GET',\n//   url: 'https://api.themoviedb.org/3/trending/all/day',\n//   params: {language: 'en-US'},\n//   headers: {\n//     accept: 'application/json',\n//     Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//   }\n// };\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });\n\n//   import axios from 'axios';\n\n//   const options = {\n//     method: 'GET',\n//     url: 'https://api.themoviedb.org/3/search/movie',\n//     params: {query: 'batman', include_adult: 'false', language: 'en-US', page: '1'},\n//     headers: {\n//       accept: 'application/json',\n//       Authorization: 'Bearer b3232dec66f7bb298b28583e91fb7fbe'\n//     }\n//   };\n  \n//   axios\n//     .request(options)\n//     .then(function (response) {\n//       console.log(response.data);\n//     })\n//     .catch(function (error) {\n//       console.error(error);\n//     });","// extracted by mini-css-extract-plugin\nexport default {\"article\":\"MovieDetails_article__-aoPZ\",\"add\":\"MovieDetails_add__8mb3q\",\"link\":\"MovieDetails_link__wf74g\",\"list\":\"MovieDetails_list__y5Rs9\",\"item\":\"MovieDetails_item__9ATw3\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"profile\":\"MovieDetails_profile__AkYZW\",\"subheader\":\"MovieDetails_subheader__JCCs5\",\"back\":\"MovieDetails_back__X8E6B\"};","import { useEffect, useState, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { fetchMovies } from 'API/movies-api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const url = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const path = `movie/${movieId}`;\n    const fetchData = async () => {\n      try {\n        const { data } = await fetchMovies(path);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div className={css.wrapper}>\n      <Link\n        to={backLinkLocationRef.current}\n        className={`${css.link} ${css.back}`}\n      >\n        <BiArrowBack />\n        Go back\n      </Link>\n      <article className={css.article}>\n        <img\n          src={movie.poster_path ? url + movie.poster_path : ''}\n          alt={movie.title}\n          width=\"350\"\n          height=\"450\"\n        />\n        <div className={css.profile}>\n          <h1>{movie.title}</h1>\n          <p>User Score: {(movie.vote_average * 10).toFixed()}%</p>\n          <h2 className={css.subheader}>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2 className={css.subheader}>Genres</h2>\n          <p>\n            {movie.genres\n              ? movie.genres.map(genre => genre.name).join(', ')\n              : 'not specified'}\n          </p>\n        </div>\n      </article>\n\n      <div className={css.add}>\n        <b>Additional information</b>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <Link to=\"cast\" className={css.link}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.link}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovies","path","query","BASE_SEARCH_PARAMS","api_key","language","page","axios","params","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchData","data","console","log","className","css","to","current","src","poster_path","alt","title","width","height","vote_average","toFixed","overview","genres","map","genre","name","join"],"sourceRoot":""}